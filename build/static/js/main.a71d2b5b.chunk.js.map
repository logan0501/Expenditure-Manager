{"version":3,"sources":["Components/Card.js","Components/ExpenseFilter.js","Components/ExpenseDate.js","Components/ExpenseItem.js","Components/ExpenseList.js","Components/ChartBar.js","Components/Chart.js","Components/ExpensesChart.js","Components/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","items","length","map","element","id","ChartBar","barFillHeight","maxValue","console","log","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filterYear","setFilteredYear","filterdExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","changeHandler","name","prevState","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","htmlFor","NewExpense","entereddata","random","onSaveData","INITIAL_EXPENSES","App","setExpenses","data","prevdata","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a71d2b5b.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nfunction Card(props){\r\n    const classes = 'card '+props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const dropDownHandler = (event)=>{\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\r\n\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US',{month:'long'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return(\r\n    <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\".expense-date__day\">{day}</div>\r\n        <div className=\".expense-date__year\">{year}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from \"./Card\";\r\n\r\n\r\nfunction ExpenseItem(props){\r\n\r\n\r\n    return (\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date}/>\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\nexport default ExpenseItem;","import \"./ExpenseList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpenseList = (props)=>{\r\n\r\n    if(props.items.length ===0){\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\r\n    }\r\n    return (\r\n        <li className=\"expenses-list\">\r\n            {\r\n                props.items.map(element => \r\n                    <ExpenseItem \r\n                    key={element.id} \r\n                    title={element.title} \r\n                    amount={element.amount}\r\n                    date={element.date} />\r\n               \r\n                    )\r\n            }\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseList;","import \"./ChartBar.css\";\r\n\r\nexport default function ChartBar(props){\r\n    let barFillHeight='0%';\r\n    if(props.maxValue > 0){\r\n        console.log(props.value/props.maxValue);\r\n        barFillHeight = Math.round((props.value / props.maxValue)*100)+'%';\r\n    }\r\n  \r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n            </div>\r\n                <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n}","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\nexport default function Chart(props){\r\n    const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMax = Math.max(...dataPointsValues)\r\n    return (\r\n        <div className=\"chart\">\r\n            {\r\n            props.dataPoints.map(dataPoint => \r\n            <ChartBar \r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMax}\r\n            label={dataPoint.label\r\n            }/>\r\n            )}\r\n        </div>\r\n    )\r\n}","import Chart from \"./Chart\";\r\n\r\nexport default function ExpensesChart(props){\r\n    const chartDataPoints =[\r\n        {label :'Jan',value :'0'},\r\n        {label :'Feb',value :'0'},\r\n        {label :'Mar',value :'0'},\r\n        {label :'Apr',value :'0'},\r\n        {label :'May',value :'0'},\r\n        {label :'Jun',value :'0'},\r\n        {label :'Jul',value :'0'},\r\n        {label :'Aug',value :'0'},\r\n        {label :'Sep',value :'0'},\r\n        {label :'Oct',value :'0'},\r\n        {label :'Nov',value :'0'},\r\n        {label :'Dec',value :'0'},\r\n    ]\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value+=expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}","import \"./Expenses.css\";\r\n\r\nimport Card from \"./Card\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport { useState } from \"react\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nfunction Expenses(props){\r\n    \r\n    const [filterYear,setFilteredYear]=useState('2020');\r\n\r\n    const filterChangeHandler=selectedYear=>{\r\n        setFilteredYear(selectedYear);\r\n    }\r\n\r\n    const filterdExpenses = props.items.filter(expense=>{\r\n        return expense.date.getFullYear().toString()===filterYear;\r\n    });\r\n   \r\n    \r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter selected={filterYear} onChangeFilter={filterChangeHandler}/>\r\n            <ExpensesChart expenses = {filterdExpenses}/>\r\n            <ExpenseList items={filterdExpenses}/>\r\n            \r\n           \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React,{useState} from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props)=>{\r\n    const [userInput,setUserInput] = useState({\r\n        enteredTitle:'',\r\n        enteredAmount:'',\r\n        enteredDate:'',\r\n    });\r\n\r\n    const changeHandler=(event)=>{\r\n        const {name,value} = event.target;\r\n        setUserInput((prevState)=>{\r\n            return {...prevState,[name]:value};\r\n        });\r\n    }\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: userInput.enteredTitle,\r\n            amount: userInput.enteredAmount,\r\n            date: new Date(userInput.enteredDate)\r\n        };\r\n        props.onSaveExpenseData(expenseData);\r\n        setUserInput({\r\n            enteredTitle:'',\r\n            enteredAmount:'',\r\n            enteredDate:'',\r\n        });\r\n    } \r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label >Title</label>\r\n                    <input type=\"text\" name=\"enteredTitle\" value={userInput.enteredTitle} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label >Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" name=\"enteredAmount\" value={userInput.enteredAmount} onChange={changeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"\">Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\"  max=\"2022-12-31\" name=\"enteredDate\" value={userInput.enteredDate} onChange={changeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import React from \"react\"\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props)=>{\r\n\r\n    const ExpenseHandler = (entereddata)=>{\r\n        const expenseData ={\r\n            ...entereddata,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onSaveData(expenseData);\r\n    }\r\n    return (\r\n        <div className=\"new-expense\">\r\n            <ExpenseForm onSaveExpenseData={ExpenseHandler} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NewExpense;","import Expenses from \"./Components/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\nimport React,{ useState } from \"react\";\n\nconst INITIAL_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2020, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  \n  const [expenses,setExpenses]=useState(INITIAL_EXPENSES);\n\n  const expenseHandler = (data)=>{\n    setExpenses((prevdata)=>{return [data,...prevdata];});\n  }\n  return (\n    <div>\n      <NewExpense onSaveData={expenseHandler}/>\n      <Expenses items={expenses}/>   \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}